/*
  davfuse: FUSE file systems as WebDAV servers
  Copyright (C) 2012, 2013 Rian Hunter <rian@alum.mit.edu>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef EVENTS_H
#define EVENTS_H

#ifdef __cplusplus
extern "C" {
#endif

/* all events types go here,
   the benefits of writing all your own code */

typedef enum {
  GENERIC_EVENT,
  READ_FN_DONE_EVENT,
  UTIL_EVENT_LOOP_SOCKET_READ_DONE_EVENT = READ_FN_DONE_EVENT,
  WRITE_FN_DONE_EVENT,
  UTIL_EVENT_LOOP_SOCKET_WRITE_DONE_EVENT = WRITE_FN_DONE_EVENT,
  HTTP_CONNECTION_WRITE_DONE_EVENT = UTIL_EVENT_LOOP_SOCKET_WRITE_DONE_EVENT,
  HTTP_NEW_REQUEST_EVENT,
  HTTP_REQUEST_READ_HEADERS_DONE_EVENT,
  HTTP_REQUEST_WRITE_HEADERS_DONE_EVENT,
  HTTP_REQUEST_READ_DONE_EVENT,
  HTTP_REQUEST_WRITE_DONE_EVENT,
  HTTP_END_REQUEST_EVENT,
  START_COROUTINE_EVENT,
  C_FBGETC_DONE_EVENT,
  C_FBPEEK_DONE_EVENT,
  C_GETWHILE_DONE_EVENT,
  EVENT_LOOP_SOCKET_EVENT,
  EVENT_LOOP_FD_EVENT,
  EVENT_LOOP_TIMEOUT_EVENT,
  C_WRITEALL_DONE_EVENT,
  C_READ_DONE_EVENT,
  WEBDAV_MKCOL_DONE_EVENT,
  RUN_PROPFIND_DONE_EVENT,
  WEBDAV_REMOVE_DONE_EVENT,
  WEBDAV_DELETE_DONE_EVENT,
  WEBDAV_MOVE_DONE_EVENT,
  WEBDAV_COPY_DONE_EVENT,
  WEBDAV_TOUCH_DONE_EVENT,
  HTTP_SERVER_STOP_DONE_EVENT,
  SEND_MESSAGE_DONE_EVENT,
  RECEIVE_REPLY_MESSAGE_DONE_EVENT,
  ASYNC_FUSE_FS_OPEN_DONE_EVENT,
  ASYNC_FUSE_FS_FGETATTR_DONE_EVENT,
  ASYNC_FUSE_FS_GETATTR_DONE_EVENT,
  ASYNC_FUSE_FS_READ_DONE_EVENT,
  ASYNC_FUSE_FS_WRITE_DONE_EVENT,
  ASYNC_FUSE_FS_GETDIR_DONE_EVENT,
  ASYNC_FUSE_FS_UNLINK_DONE_EVENT,
  ASYNC_FUSE_FS_RMDIR_DONE_EVENT,
  ASYNC_FUSE_FS_RENAME_DONE_EVENT,
  ASYNC_FUSE_FS_MKDIR_DONE_EVENT,
  ASYNC_FUSE_FS_RMTREE_DONE_EVENT,
  ASYNC_FUSE_FS_COPYFILE_DONE_EVENT,
  ASYNC_FUSE_FS_COPYTREE_DONE_EVENT,
  ASYNC_FUSE_FS_MKNOD_DONE_EVENT,
  ASYNC_FUSE_FS_RELEASE_DONE_EVENT,
  WEBDAV_GET_REQUEST_SIZE_HINT_DONE_EVENT,
  WEBDAV_GET_REQUEST_WRITE_DONE_EVENT,
  WEBDAV_GET_REQUEST_WRITE_EVENT,
  WEBDAV_GET_REQUEST_END_EVENT,
  WEBDAV_PUT_REQUEST_READ_EVENT,
  WEBDAV_PUT_REQUEST_READ_DONE_EVENT,
  WEBDAV_PUT_REQUEST_END_EVENT,
  WEBDAV_PROPFIND_DONE_EVENT,
  ASYNC_RDWR_DESTROY_DONE_EVENT,
  ASYNC_RDWR_WRITE_LOCK_DONE_EVENT,
  ASYNC_RDWR_READ_LOCK_DONE_EVENT,
  ASYNC_TREE_EXPAND_FN_DONE_EVENT,
  ASYNC_TREE_APPLY_FN_DONE_EVENT,
  ASYNC_TREE_APPLY_DONE_EVENT,
} event_type_t;

#define EVENT_HANDLER_DEFINE(handler, a, b, c) void handler(event_type_t a, void *b, void *c)
#define EVENT_HANDLER_DECLARE(handler) EVENT_HANDLER_DEFINE(handler, a, b, c)

typedef EVENT_HANDLER_DECLARE((*event_handler_t));

#ifdef __cplusplus
}
#endif

#endif /* EVENTS_H */
